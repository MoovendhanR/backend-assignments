1.What is React? 
 -known as React.js or ReactJs,it is a free and open source front-end
 javascript library for building user interface based UI components
 -it was created by Facebook the author name jordan walke & its maintained 
 by meta a community of individual developers and companies.
 -single-page application,views based,server side rendered application

 2.What is JSX?
-its stands for javascriptxml,its a syntax extension for javascript
-jsx allows us to write HTML in React,jsx makes easier to write and add HTML in React.
-jsx allows us to write HTML elements in javascript, place them in the dom without an 
 createElement() and/or appendChild() methods.
-you are not required to write jsx,but jsx makes easier to write React application.

3.What is the difference between Props and state?
          props                                 state      
-the datails passed one components to     -the data is passed within a component
 another component.
-it is immutable.                        -its mutable.
-props can be used with  state and       -state can be used with the statecomponent/
 functional components.                      class components
-props can be reads only.                -state is both read and write.

4.What is Conditional Rendering?
-In react ,you can create distinct components that encapsulate behavior you need,
-Then you can render only some of them,depending on the state of your application.
-Conditional rendering in React working the same way conditions work in javascript.
ex.
function Greeting(props){
  const isLoggedIn = props.isLoggedIn;
  if(isLoggedIn){
    return <UserGreeting />;
   }
  return <GuestGreeting />;
} 

const root = ReactDOM.createRoot(document.getElementById('root')); 
// Try changing to isLoggedIn={true}:
root.render(<Greeting isLoggedIn={false} />); 

5.Explain how lists work in React?
-lists are used to display data in order format and mainly used to display menus
on websites.
-In React,Lists can be created in similar way as we create lists in javascript.
ex:
var numbers = [1, 2, 3, 4, 5];   
const multiplyNums = numbers.map((number)=>{   
    return <> 
    <li>{number * 5}</li>
    </> 
});

6.What are keys in React?
-A key is a unique identifier.In React,it is used to identify which items have changed,
updated,or deleted from the lists. 
-it is useful when we dynamically created components or when the user alter the lists.

7.What is memoisation in react?
-memoisation is an feature in React which,when used in the right place,
increases the perfromance of the program.
-React gives us purecomponent and memo to implement memoisation.purecomponent is used 
with the class component and memo is used functional component.

8.What is the difference between react.memo and react.useMemo?
-In useMemo it remember the return value between renders, and in React.memo it remembers
the react component between renders.react.memo is higher-order component that accepts a 
react component memoizes it depending on your props.

9.What are the parameters that react memo takes?
   It takes two parameter one is callback function and second is a dependency

10.What are the different ways to apply useEffect?
-there are four ways to apply useEffect.
 *once, when component mounts
 *on every component render.
 *on every component render with a conditions.
 *when component is unmounted 

 11.How does Routing work with react?
-React router is mainly used for developing single page applications.React Router is 
 used to define multiple routes in the application.
-When a user types a specific URL into the browser,and if this URL path matches any "route" 
 inside the root file,the user will be redirected to that particular route.

12.What is SSR and CSR?
   server side rendering                       client side rendering
-ideal(ஏற்றதாக) for sites serving only   -ideal(ஏற்றதாக) for web apps.
 static(நிலையான) content
-Fast initial page load.                   -Fast rendering after initial page load.
-no js dependency                          -rich site interaction 
-Easy for search engine bots to 
crawl and index a site because the         -Reduces server load.
content exists before the user  
receive it-more straightforward SEO

13.What are the lifecycle methods in class components?
-There are three categories of lifecycle methods:mounting,updating,unmounting.
-A component "mounts" when it renders for the first time.this is when mounting lifecycle methods
get called.  
-The first time the component instance a renders,it does not update.

14.What are dependencies in useEffect?
-useEffect(callback,dependencies) is the hook that manages side effects in functional components.
-callback argument is a function to put the side-effects logic.
-dependencies is a list of dependencies of your side-effect:being props or state value.

15.What is a pure component?
-A React component is considered pure if it renders the same output for the same state and props.
-for this type of class component ,React provides the PureComponent base class.
-class component that extend the React.PureComponent class are treated as pure components.

19.How does Context API work? What does it solve?
 -the react context api is a way for a React app to effectively produce global variables that can be passed around.
 -This is the alternative to "prop drilling" or moving props from grandparent to child to parent, and so on.
 -Context is also touted as an easier,lighter approach to state management using Redux.

 20.what is props drilling?
 -prop drilling is the unofficial term for passing data through several nested childern components.
 -React developers often(அடிக்கடி) encounter scenarios where they must pass data/state from a top-level component 
  to a deeply nested component. Prop drilling refers to transporting this data/state as props to the intended 
  destination through intermediate components.

21.What does useReducer do?
-useReducer returns an array that holds the current state value and a dispatch function to which you can pass an action
-and later invoke it.while this is similar to the pattern Redux uses,there are few deference.
-for Ex.
    the useReducer function is tightly coupled to a specific reducer.

22.When do you use useReducer vs useState?
-useReducer is usually preferable to useState when you have complex state logic that involves multiple sub-values or when the next state 
 depends on the previous one.
-useReducer also lets you optimize perfromance for components that trigger deep updates because you can pass dispatch that trigger deep updates  
because you can pass dispatch down instead of callbacks.

23.How do you use Profiler?
-A Profiler can be added  anywhere in a React tree to measure the cost of rendering that part of the tree.It requires two props,    
-an id(sting) and an onRender callback(function) when React calls anytime a component within the tree "commitzs" an updates.

24.What is dispatcher?
-the dispatcher is the center point of the data flow in a flux application.its essentially a registry of callbacks, 
  and can invoke these callbacks in order. 
-each store registers a callback with the dispatcher. 

25.What is flux architecture?
-Flux is a Javascript architecture or pattern for UI(user interface) which runs on a unidirectional data flow 
 and it has a centralized dispatcher.
-it is usefull when your project has dynamic data and you need to keep the data updated in an effective manner.
-it was created by facebook uses for build client-side web application.

26.What are side effects? in react.  
-side effects are not pridictable because they are actions which are performed with the "outsside world".  
-we perform a side effect when we need to reach outside of your react componments to do something.
-performing a side effect,however,will not give us a pridictable result.

27.What does lazy loading mean?
-in essence, lazy loading means that a component or a part of code must get loaded when it is required.
-its also referred(குறிப்பிடப்பட்ட) to as code spliting and data fetching.
-Talking about React specially,it bundles the complete code and deploys all of it at the same time.

28.What are thunks? Why do you need them?
-thunks are the standard approach for writting async logic in Redux apps and are commonly used for data fetching.
 However, they can be used for a 
 variety of tasks,and can contain both synchronous and asynchronous logic.
-The most common use case for Redux Thunk is for communicating asynchronously with an 
  external API to retrieve or save data

 29.What does webpack do?
-webpack is a tool that lets you compile javascript modules, also known as module bundler.given a large number of files,
 it generates a single file  that run your app.  
-it can perform many operations:helps you bundle your resources.

30.What does babel do?
-Babel is a toolchain that is mainly used to convert ECMAScript 2015+ code into a backwards compatible(இணக்கமான)
  version of javascript in current and older browsers or environments. 
-Programming languages used:javascript
-type:compiler.
